---
import { getProjectImages } from '../cloudinary/loadProjects';

const { folderName } = Astro.props;

// Obtener las imágenes del proyecto
const images = await getProjectImages(folderName);

// Calcular el número de columnas basado en la cantidad de imágenes
const getColumnCount = (imageCount: number) => {
    if (imageCount <= 4) return 2;
    if (imageCount <= 9) return 3;
    if (imageCount <= 12) return 6;
    if (imageCount <= 16) return 8;
    return 5;
};

const columnCount = getColumnCount(images.length);

---

<div class="grid-container pswp-gallery" style={`--column-count: ${columnCount}`}>
    {images.length > 0 ? (
        images.map((image) => {
            const aspectRatio = image.width / image.height;
            
            return (
                <a
                    href={image.secure_url} 
                    data-pswp-width={image.width} 
                    data-pswp-height={image.height} 
                    title={image.filename}
                    class="grid-item"
                    style={`--aspect-ratio: ${aspectRatio}`}
                >
                    <img 
                        src={image.secure_url} 
                        alt={image.filename} 
                        width={image.width}  
                        height={image.height}
                        loading="lazy"
                        class="grid-image" 
                    />
                </a>
            );
        })
    ) : (
        <p>No hay imágenes disponibles.</p>
    )}
</div>

<script src="/src/scripts/photoswipe-init.js"></script>

<style>
.grid-container {
    height: 65vh;
    padding: 20px;
    border-radius: 10px;
    display: grid;
    grid-template-columns: repeat(var(--column-count, 3), 1fr);
    gap: 15px;
    max-width: 1800px;
    margin: 20px auto;
    overflow: hidden;
    place-items: stretch;
}

.grid-item {
    position: relative;
    width: 100%;
    height: 100%;
    transition: all 0.5s ease;
    aspect-ratio: var(--aspect-ratio);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: 20px;
    cursor: pointer;
    background: rgba(0, 0, 0, 0.2);
}

.grid-item::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        0deg,
        transparent,
        transparent 30%,
        var(--accent-overlay)
    );
    transform: rotate(-45deg);
    transition: all 0.5s ease;
    opacity: 0;
    z-index: 2;
    pointer-events: none;
}

.grid-item:hover {
    transform: scale(1.02);
    box-shadow: 0 0 20px var(--accent-regular);
}

.grid-item:hover::before {
    opacity: 1;
    transform: rotate(-45deg) translateY(100%);
}

.grid-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    border-radius: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
    background-color: rgba(0, 0, 0, 0.05);
    transition: all 0.5s ease;
    filter: brightness(0.9);
}

.grid-item:hover .grid-image {
    filter: brightness(1.1);
}

@media (max-width: 1200px) {
    .grid-container {
        --column-count: 3 !important;
    }
}

@media (max-width: 768px) {
    .grid-container {
        --column-count: 2 !important;
    }
}

@media (max-width: 480px) {
    .grid-container {
        --column-count: 1 !important;
        gap: 20px;
        padding: 15px;
        height: auto;
        min-height: 73vh;
    }
    .grid-item:hover {
        transform: scale(1.02);
    }
    .grid-image {
        max-height: 300px;
    }
}
</style> 
---
import cloudinary from '../cloudinary';
import BaseLayout from '../layouts/BaseLayout.astro';
import { Image } from 'astro:assets';

const { folderName } = Astro.props; // Prop que recibe el nombre de la carpeta

// Define la interfaz para las imágenes
interface ImageData {
    secure_url: string;
    display_name: string;
    width: number;
    height: number;
}

let images: ImageData[] = [];




try {
    // Usa el método de búsqueda avanzada de Cloudinary para filtrar por nombre de carpeta
    const { resources }: { resources: ImageData[] } = await cloudinary.search
        .expression(`folder:${folderName} AND resource_type:image`)  // Filtra las imágenes por carpeta
        .max_results(30)                     // Limita los resultados a 30 (puedes ajustarlo)
        .execute();                          // Ejecuta la búsqueda
    
    // Ordena las imágenes alfabéticamente por el campo 'display_name'
    images = resources.sort((a: ImageData, b: ImageData) => b.display_name.localeCompare(a.display_name));
} catch (error) {
    console.error('Error al buscar imágenes:', error);
    throw new Error('No se pudieron obtener las imágenes de la carpeta.');
}

    

---

<BaseLayout>
    <div class="masonry-container">
        {images.length > 0 ? (
            images.map((image) => (
                <a
                    href={image.secure_url} 
                    data-pswp-width={image.width} 
                    data-pswp-height={image.height} 
                    title={image.display_name}
                    class="masonry-item"
                >
                    <Image 
                        src={image.secure_url} 
                        alt={image.display_name} 
                        width={image.width}  
                        height={image.height}
                        loading="eager" 
                        class="masonry-image" 
                    />

                </a>
            ))
        ) : (
            <p>No hay imágenes disponibles.</p>
        )}
    </div>
</BaseLayout>

<script src="/src/scripts/photoswipe-init.js"></script>

<style>
    .masonry-container {
    display: grid; 
    grid-template-columns: repeat(3, 1fr); 
    gap: 25px;
    max-width: 1800px;
    margin: 0 auto;
    padding: 20px;
}

.masonry-item {
    width: 100%;
}

.masonry-image {
    width: 75%;
    height: auto;
    display: block;
    border-radius: 5px;
    transition: transform 0.3s;
    object-fit: scale-down;
}


.masonry-image:hover {
    transform: scale(1.05);
}

@media (max-width: 768px) {
    .masonry-container {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 480px) {
    .masonry-container {
        grid-template-columns: 1fr;
    }
}

</style>

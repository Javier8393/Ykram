<text-toggle lang="es">
    <button class="text-toggle">ES</button>
</text-toggle>

<script>
    class TextToggle extends HTMLElement {
        constructor() {
            super();
            const button = this.querySelector('button');
            if (!button) return;

            const languages = { es: "ES", en: "EN" } as const;
            type Language = keyof typeof languages;
            let currentLang: Language = (localStorage.getItem('lang') as Language) || (this.getAttribute('lang') as Language) || 'es';

            const updateLanguage = async () => {
                document.documentElement.lang = currentLang;
                button.className = currentLang === 'es' ? 'lang-es' : 'lang-en';
                button.textContent = languages[currentLang];

                localStorage.setItem('lang', currentLang);

                const response = await fetch(`/src/translations/${currentLang}.json`); // Ajustado para apuntar a la ubicaciÃ³n correcta
                if (response.ok) { // Verifica la respuesta
                    const translations = await response.json();
                    const elements = document.querySelectorAll('[data-i18n]');
                    elements.forEach(element => {
                        const key = element.getAttribute('data-i18n');
                        if (key && translations[key]) {
                            element.textContent = translations[key];
                        }
                    });
                } else {
                    console.error('Error al cargar las traducciones:', response.statusText);
                }
            };

            button.addEventListener('click', () => {
                currentLang = currentLang === 'es' ? 'en' : 'es';
                updateLanguage();
            });

            updateLanguage();
        }
    }
    customElements.define('text-toggle', TextToggle);
</script>

<style>
    button {
        display: flex;
        align-items: center;
        justify-content: center;
        border: 0;
        border-radius: 50%;
        width: 48px;
        height: 48px;
        padding: 0;
        background-color: transparent;
        background-size: cover;
        cursor: pointer;
        transition: background-image 0.3s;
        position: relative;
        color: white;
        font-weight: bold;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    button::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 50%;
        z-index: 0;
    }

    button > * {
        position: relative;
        z-index: 1;
    }

    .lang-es {
        background-image: url('/assets/flags/es.png');
    }

    .lang-en {
        background-image: url('/assets/flags/en.png');
    }
</style>

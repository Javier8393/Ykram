---
import BaseLayout from "../layouts/BaseLayout.astro";
import { fetchFolders } from "../cloudinary/fetchFolders";
import { fetchImageByName } from "../cloudinary/fetchImages";
import { fetchProjectData } from "../cloudinary/fetchProjectData";

interface ProjectData {
    name: string;
    description: string;
    featured_image: string | null;
    folder: string;
}

const DEFAULT_FEATURED_IMAGE = "/assets/interrogacion.jpg";
let projects: ProjectData[] = [];

try {
    const folders = await fetchFolders("Proyectos");

    projects = (await Promise.all(
        folders.map(async (folder) => {
            try {
                const projectData = await fetchProjectData(folder.path);

                if (projectData) {
                    // Busca directamente la imagen destacada en Cloudinary
                    const matchedImage = await fetchImageByName(
                        folder.path,
                        projectData.featured_image || ""
                    );

                    const featuredImageUrl = matchedImage
                        ? matchedImage.secure_url
                        : DEFAULT_FEATURED_IMAGE;

                    // Retorna un objeto con el tipo exacto de ProjectData
                    return {
                        name: projectData.name,
                        description: projectData.description,
                        featured_image: featuredImageUrl,
                        folder: folder.path,
                    } as ProjectData;
                }

                return null; // Si no hay datos vÃ¡lidos
            } catch (error) {
                console.error(
                    `Error al procesar la carpeta ${folder.name}:`,
                    error
                );
                return null;
            }
        })
    )).filter((project): project is ProjectData => project !== null);
} catch (error) {
    console.error("Error al cargar los proyectos:", error);
}
---

<BaseLayout>
    <div class="projects-list">
        {projects.length > 0 ? (
            projects.map((project) => (
                <a
                    href={`/${project.folder.split("/")[1]}`}
                    class="project-item"
                >
                    <img
                        src={project.featured_image}
                        alt={project.name}
                        class="project-image"
                    />
                    <div class="project-details">
                        <h3>{project.name}</h3>
                        <p>{project.description}</p>
                    </div>
                </a>
            ))
        ) : (
            <p>No hay proyectos disponibles.</p>
        )}
    </div>
</BaseLayout>




<style>
    .projects-list {
        padding: 2.5rem;
        display: flex;
        flex-direction: column;
        gap: 3rem;
    }

    .project-item {
        border: 1px solid var(--gray-800);
        border-radius: 1.25rem;
        padding: 2rem;
        background-color: var(--gray-999);
        text-decoration: none;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .project-image {
        width: 100%;
        height: auto;
        border-radius: 1.25rem;
        object-fit: fill;
    }

    .project-details h3 {
        font-size: 2rem;
        margin: 0;
        color: var(--accent-light);
        text-align: center;
    }

    .project-details p {
        color: var(--gray-100);
        font-size: 1.5rem;
        line-height: 1.8;
    }

    @media (min-width: 768px) {
        .project-item {
            flex-direction: row;
            gap: 3rem;
        }

        .project-details h3 {
            text-align: left;
        }

        .projects-list {
            max-width: 1000px;
            margin-left: auto;
            margin-right: auto;
        }

        .project-image {
            width: 300px;
            height: 300px;
            border-radius: 1.25rem;
            object-fit: fill;
        }
    }
</style>
